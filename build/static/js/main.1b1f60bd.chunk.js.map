{"version":3,"sources":["InfoBox.js","LineGraph.js","Table.js","util.js","App.jsx","index.js"],"names":["InfoBox","title","cases","total","Card","className","CardContent","Typography","color","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","a","fetch","then","response","json","fetchData","length","datasets","backgroundColor","borderColor","Table","countries","map","country","sortData","sortedData","sort","b","App","setCountries","setCountry","countryInfo","setCountryInfo","tableData","setTableData","res","name","iso2","getCountriesData","onCountryChange","event","countryCode","target","url","FormControl","Select","variant","onChange","MenuItem","todayCases","recovered","todayRecovered","deaths","todayDeaths","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b1f60bd.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './InfoBox.css'\r\n\r\nconst InfoBox = ({ title, cases, total }) => {\r\n    return (\r\n        <Card className=\"infoBox\">\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" className=\"infoBox__title\">\r\n                    {title}\r\n                </Typography>\r\n                <h2 className=\"infoBox__cases\">{cases}</h2>\r\n                <Typography color=\"textSecondary\" className=\"infoBox__total\">\r\n                    {total} Total\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\nimport './LineGraph.css'\r\n\r\nconst options = {\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    format: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n    let chartData = [];\r\n    let lastDataPoint;\r\n    for (let date in data.cases) {\r\n        if (lastDataPoint) {\r\n            let newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint,\r\n            };\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType = \"cases\" }) {\r\n    const [data, setData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    let chartData = buildChartData(data, casesType);\r\n                    setData(chartData);\r\n                    // console.log(chartData);\r\n                    // buildChart(chartData);\r\n                });\r\n        };\r\n\r\n        fetchData();\r\n    }, [casesType]);\r\n\r\n    return (\r\n        <div className=\"lineGraph\">\r\n            <h3>Worldwide new cases</h3>\r\n            {data?.length > 0 && (\r\n                <Line\r\n                    data={{\r\n                        datasets: [\r\n                            {\r\n                                data: data,\r\n                                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                                borderColor: \"#CC1034\",\r\n                            },\r\n                        ],\r\n                    }}\r\n                    options={options}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LineGraph;","import React from 'react'\r\nimport './Table.css'\r\n\r\nfunction Table({ countries }) {\r\n    return (\r\n        <div className=\"table\">\r\n            {\r\n                countries.map(({ country, cases }) => (\r\n                    <tr>\r\n                        <td>{country}</td>\r\n                        <td><strong>{cases}</strong></td>\r\n                    </tr>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","export const sortData = (data) => {\r\n    const sortedData = [...data];\r\n\r\n    sortedData.sort((a, b) => {\r\n        if (a.cases > b.cases) {\r\n            return -1;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    })\r\n    return sortedData;\r\n}","import { Card, CardContent, FormControl, MenuItem, Select } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport './App.css'\r\nimport InfoBox from './InfoBox';\r\nimport LineGraph from './LineGraph';\r\nimport Table from './Table'\r\nimport { sortData } from './util';\r\n\r\nconst App = () => {\r\n\r\n\tconst [countries, setCountries] = useState([])\r\n\tconst [country, setCountry] = useState(\"worldwide\")\r\n\tconst [countryInfo, setCountryInfo] = useState({})\r\n\tconst [tableData, setTableData] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(\"https://disease.sh/v3/covid-19/all\").then(res => res.json()).then(data => {\r\n\t\t\tsetCountryInfo(data)\r\n\t\t})\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getCountriesData = async () => {\r\n\t\t\tawait fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconst countries = data.map((country) => ({\r\n\t\t\t\t\t\tname: country.country,\r\n\t\t\t\t\t\tvalue: country.countryInfo.iso2\r\n\t\t\t\t\t}))\r\n\r\n\t\t\t\t\tconst sortedData = sortData(data)\r\n\t\t\t\t\tsetTableData(sortedData);\r\n\t\t\t\t\tsetCountries(countries)\r\n\t\t\t\t})\r\n\t\t}\r\n\t\tgetCountriesData();\r\n\t}, [])\r\n\r\n\tconst onCountryChange = async (event) => {\r\n\t\tconst countryCode = event.target.value\r\n\r\n\t\tsetCountry(countryCode)\r\n\r\n\t\tconst url =\r\n\t\t\tcountryCode === 'worldwide'\r\n\t\t\t\t? 'https://disease.sh/v3/covid-19/all'\r\n\t\t\t\t: `https://disease.sh/v3/covid-19/countries/${countryCode}`\r\n\r\n\t\tawait fetch(url)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetCountry(countryCode)\r\n\t\t\t\tsetCountryInfo(data);\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"app\">\r\n\t\t\t\t<div className=\"app__left\">\r\n\t\t\t\t\t<div className=\"app__header\">\r\n\t\t\t\t\t\t<h1>COVID-19 TRACKER</h1>\r\n\t\t\t\t\t\t<FormControl className=\"app__dropdown\">\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tvalue={country}\r\n\t\t\t\t\t\t\t\tonChange={onCountryChange}>\r\n\t\t\t\t\t\t\t\t<MenuItem value=\"worldwide\">Worldwide</MenuItem>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tcountries.map((country) => (\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={country.value}>{country.name}</MenuItem>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"app__stats\">\r\n\t\t\t\t\t\t<InfoBox title=\"Coronavirus cases\" total={countryInfo.cases} cases={countryInfo.todayCases} />\r\n\t\t\t\t\t\t<InfoBox title=\"Recovered\" total={countryInfo.recovered} cases={countryInfo.todayRecovered} />\r\n\t\t\t\t\t\t<InfoBox title=\"Deaths\" total={countryInfo.deaths} cases={countryInfo.todayDeaths} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<LineGraph />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Card className=\"app__right\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<div className=\"app__information\">\r\n\t\t\t\t\t\t\t<h3>Live Cases by country</h3>\r\n\t\t\t\t\t\t\t<Table countries={tableData} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />,\n    document.getElementById('root')\n    )"],"sourceRoot":""}